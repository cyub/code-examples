---
- name: Update apt cache (Debian)
  apt: update_cache=yes cache_valid_time=86400
  when: ansible_os_family == 'Debian'

- name: Ensure dependencies for building from source are installed (Debian)
  apt: "pkg={{ item }} state=present"
  with_items:
    - build-essential
    - autoconf
    - automake
    - libtool
    - bison
    - pkg-config
    - re2c
    - libzip-dev
    - libwebp-dev
    - libxml2-dev
    - libcurl4-openssl-dev
    - libbz2-dev
    - libjpeg-dev
    - libjpeg8-dev
    - libpng-dev
    - libpcre3-dev
    - libxpm-dev
    - libmcrypt-dev
    - libfreetype6-dev
    - libgmp3-dev
    - libmysqlclient-dev
    - libpspell-dev
    - librecode-dev
    - libssl-dev
  when: ansible_os_family == 'Debian'

- name: Define php_fpm_daemon (if not defined already)
  set_fact:
  php_fpm_daemon: "php-fpm"
  when: php_fpm_daemon is not defined

- name: Check if PHP is installed.
  command: which php
  changed_when: false
  failed_when: false
  register: php_installed

- name: Ensure PHP source path exists
  file:
    path: "{{ php_source_src_dir }}"
    state: directory
    mode: 0755
  when: php_installed.rc != 0

- name: Download PHP source code from mirror
  unarchive:
    src: "{{ php_source_mirror }}"
    dest: "{{ php_source_src_dir }}/../"
    remote_src: yes
  when: php_installed.rc != 0

- name: Ensure PHP installation path exists
  file:
    path: "{{ php_source_install_path }}"
    state: directory
    mode: 0755
  when: php_installed.rc != 0

- name: Build configure script.
  shell: >
    ./buildconf --force
    chdir={{ php_source_src_dir }}
  when: php_installed.rc != 0

- name: Run configure script.
  shell: >
    {{ php_source_configure_command }}
    chdir={{ php_source_src_dir }}
  when: php_installed.rc != 0

- name: Make and install PHP
  shell: >
    {{ item }}
    chdir={{ php_source_src_dir }}
  with_items:
    - "{{ php_source_make_command }}"
    - make install
  when: php_installed.rc != 0

- name: Ensure php executable is symlinked into a standard path
  shell: "ln -sf {{ php_source_install_path }}/bin/* /usr/local/bin/"
  when: php_installed.rc != 0

- name: Ensure systemd service directory exists
  file:
    path: "/usr/lib/systemd/system"
    state: directory
  when: "'--enable-fpm' in php_source_configure_command"

- name: Register php-fpm as systemd service
  copy:
    src: "{{ php_source_src_dir }}/sapi/fpm/php-fpm.service"
    dest: "/usr/lib/systemd/system"
    owner: root
    group: root
    mode: 0644
    remote_src: yes
  when: "'--enable-fpm' in php_source_configure_command"

- name: "Register php-fpm as init service"
  copy:
    src: "{{ php_source_src_dir }}/sapi/fpm/php-fpm"
    dest: "/etc/init.d/"
    owner: root
    group: root
    mode: 0644
    remote_src: yes
  when: "'--enable-fpm' in php_source_configure_command"

- include_tasks: configure-fpm.yml
- include_tasks: configure-php.yml
